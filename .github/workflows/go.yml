name: Go CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  RUNNING_IN_ACT: ${{ github.actor == 'nektos/act' }}
  GO_VERSION_FILE: 'go.mod'
  NODE_VERSION: '20.19.2'
  TASK_VERSION: '3.x'

permissions:
  contents: read

jobs:
  test:
    name: Test & Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          lfs: true
          submodules: recursive

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ${{ env.GO_VERSION_FILE }}
          check-latest: true
          cache: true
          cache-dependency-path: go.sum

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: ${{ env.TASK_VERSION }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Go tools
        uses: actions/cache@v4
        with:
          path: |
            ~/go/bin
            ~/.cache/go-build
          key: ${{ runner.os }}-go-tools-${{ hashFiles('**/go.mod') }}
          restore-keys: |
            ${{ runner.os }}-go-tools-

      - name: Install dependencies
        run: |
          task install
          task install:frontend

      - name: Generate code & build frontend
        run: |
          task build:frontend
          task generate:mocks
          task generate

      - name: Lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run tests
        run: task test

  build:
    name: Build Project
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    timeout-minutes: 15
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          lfs: true
          submodules: recursive

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ${{ env.GO_VERSION_FILE }}
          check-latest: true
          cache: true
          cache-dependency-path: go.sum

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: ${{ env.TASK_VERSION }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Go tools
        uses: actions/cache@v4
        with:
          path: |
            ~/go/bin
            ~/.cache/go-build
          key: ${{ runner.os }}-go-tools-${{ hashFiles('**/go.mod') }}
          restore-keys: |
            ${{ runner.os }}-go-tools-

      - name: Install dependencies & build
        run: |
          task install
          task install:frontend
          task build:frontend
          task generate:templ
          mkdir -p bin
          task build:backend

      - name: List build artifacts
        run: ls -la bin/
