name: Go CI/CD

on:
  push:
    branches: [main]
    tags: ['v*']
  pull_request:
    branches: [main]

env:
  RUNNING_IN_ACT: ${{ github.actor == 'nektos/act' }}

jobs:
  verify:
    name: Verify
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for git describe

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"
          cache: true
          cache-dependency-path: go.sum

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: "3.x"
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install templ
        run: go install github.com/a-h/templ/cmd/templ@latest

      - name: Generate files
        run: templ generate ./internal/...

      - name: Install dependencies
        run: |
          go mod download
          go mod tidy

      - name: Run linter
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest

      - name: Run tests
        run: task test

  build:
    name: Build
    needs: verify
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for git describe

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"
          cache: true
          cache-dependency-path: go.sum

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: "3.x"
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install templ
        run: go install github.com/a-h/templ/cmd/templ@latest

      - name: Generate files
        run: templ generate ./internal/...

      - name: Install dependencies
        run: |
          go mod download
          go mod tidy

      - name: Build all platforms
        run: |
          mkdir -p bin
          task build

      - name: List artifacts
        run: ls -la bin/

      # Skip artifact upload when running locally with act
      - name: Upload artifacts
        if: ${{ !env.RUNNING_IN_ACT }}
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: bin/
          retention-days: 7

      # Skip release creation when running locally with act
      - name: Create Release
        if: ${{ !env.RUNNING_IN_ACT && startsWith(github.ref, 'refs/tags/v') }}
        uses: softprops/action-gh-release@v1
        with:
          files: bin/*
          draft: false
          prerelease: false
          generate_release_notes: true
