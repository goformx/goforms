name: Release

env:
  RUNNING_IN_ACT: ${{ github.actor == 'nektos/act' }}
  GO_VERSION_FILE: 'go.mod'
  NODE_VERSION: '20.19.2'
  TASK_VERSION: '3.x'

on:
  push:
    tags: ['v*']

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          lfs: true
          submodules: recursive
      
      - name: Verify Build Files
        run: |
          if [ ! -f "./main.go" ]; then
            echo "main.go missing from root directory!"; exit 1;
          fi
          echo "âœ“ main.go found in root directory"
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ${{ env.GO_VERSION_FILE }}
          check-latest: true
          cache: true
          cache-dependency-path: go.sum

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: ${{ env.TASK_VERSION }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Go tools
        uses: actions/cache@v4
        with:
          path: |
            ~/go/bin
            ~/.cache/go-build
          key: ${{ runner.os }}-go-tools-${{ hashFiles('**/go.mod') }}
          restore-keys: |
            ${{ runner.os }}-go-tools-

      - name: Install dependencies
        run: |
          task install
          task install:frontend

      - name: Generate code & build frontend
        run: |
          task build:frontend
          task generate:mocks
          task generate

      - name: Build backend
        run: |
          mkdir -p bin
          task build:backend
      
      - name: Archive Release Files
        run: |
          mkdir -p release
          cp bin/goformx release/
          cp -r dist release/
          cp -r migrations release/
          tar -czf goformx-${{ github.ref_name }}.tar.gz -C release .

      - name: Upload Artifacts
        if: ${{ env.RUNNING_IN_ACT != 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: release-files
          path: goformx-${{ github.ref_name }}.tar.gz
          retention-days: 7

      - name: Publish GitHub Release
        if: ${{ env.RUNNING_IN_ACT != 'true' }}
        uses: softprops/action-gh-release@v2
        with:
          files: goformx-${{ github.ref_name }}.tar.gz
          draft: false
          prerelease: false
          generate_release_notes: true
