version: '3.8'

services:
  # GoForms Application
  goforms:
    image: ${DOCKER_REGISTRY:-ghcr.io}/${GITHUB_REPOSITORY:-goformx/goforms}:${IMAGE_TAG:-latest}
    restart: unless-stopped
    ports:
      - "127.0.0.1:8090:8090"
    environment:
      # Application Configuration
      - GOFORMS_APP_NAME=GoFormX
      - GOFORMS_APP_ENV=production
      - GOFORMS_APP_DEBUG=false
      - GOFORMS_APP_LOGLEVEL=info
      - GOFORMS_APP_SCHEME=https
      - GOFORMS_APP_PORT=8090
      - GOFORMS_APP_HOST=0.0.0.0

      # Database Configuration
      - GOFORMS_DB_CONNECTION=postgres
      - GOFORMS_DB_HOST=postgres
      - GOFORMS_DB_PORT=5432
      - GOFORMS_DB_NAME=${POSTGRES_DB:-goforms}
      - GOFORMS_DB_USER=${POSTGRES_USER:-goforms}
      - GOFORMS_DB_PASSWORD=${POSTGRES_PASSWORD}
      - GOFORMS_DB_MAX_OPEN=25
      - GOFORMS_DB_MAX_IDLE=5
      - GOFORMS_DB_TIMEOUT=5

      # Security Configuration
      - GOFORMS_SESSION_SECRET=${SESSION_SECRET}
      - GOFORMS_SECURITY_CSRF_SECRET=${CSRF_SECRET}
      - GOFORMS_SECURE_COOKIES=true

      # CORS Configuration
      - GOFORMS_CORS_ALLOWED_ORIGINS=${CORS_ORIGINS:-https://goforms.example.com}
      - GOFORMS_CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS
      - GOFORMS_CORS_ALLOWED_HEADERS=Content-Type,Authorization,X-Requested-With
      - GOFORMS_CORS_ALLOW_CREDENTIALS=true
      - GOFORMS_CORS_MAX_AGE=3600

      # Timeouts
      - GOFORMS_READ_TIMEOUT=5s
      - GOFORMS_WRITE_TIMEOUT=10s
      - GOFORMS_IDLE_TIMEOUT=120s
      - GOFORMS_REQUEST_TIMEOUT=30s
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - goforms-network
    volumes:
      - goforms-logs:/app/logs
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8090/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL Database
  postgres:
    image: postgres:17-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-goforms}
      - POSTGRES_USER=${POSTGRES_USER:-goforms}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ../../migrations:/docker-entrypoint-initdb.d
    networks:
      - goforms-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-goforms} -d ${POSTGRES_DB:-goforms}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

networks:
  goforms-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  postgres-data:
    driver: local
  goforms-logs:
    driver: local
