version: '3'

vars:
  VERSION:
    sh: git describe --tags --always --dirty
  BUILD_TIME:
    sh: date -u '+%Y-%m-%d_%H:%M:%S'
  GIT_COMMIT:
    sh: git rev-parse HEAD
  GO_VERSION:
    sh: go version | cut -d ' ' -f 3
  DB_URL:
    sh: echo "mysql://${DB_USER}:${DB_PASSWORD}@tcp(${DB_HOSTNAME}:${DB_PORT})/${DB_NAME}"
  LDFLAGS: -s -w -X main.version={{.VERSION}} -X main.buildTime={{.BUILD_TIME}} -X main.gitCommit={{.GIT_COMMIT}} -X main.goVersion={{.GO_VERSION}}

tasks:
  default:
    cmds:
      - task: install
      - task: generate
      - task: run

  install:
    desc: Install project dependencies
    cmds:
      - go mod download
      - go mod tidy
      - go install github.com/air-verse/air@latest
      - go install github.com/a-h/templ/cmd/templ@latest
      - GOPROXY=direct go install github.com/maddalax/htmgo/cli/htmgo@latest

  generate:
    desc: Generate code
    cmds:
      - templ generate ./internal/...

  run:
    desc: Run the application with hot reload
    deps: [install, htmgo:assets]
    method: none
    cmds:
      - templ generate
      - air
    sources:
      - "**/*.templ"
    generates:
      - "**/*_templ.go"

  test:
    desc: Run tests
    cmds:
      - go test -v ./...

  test:local:
    desc: Run tests with local Docker Compose
    cmds:
      - docker-compose -f docker/compose.test.yml up -d
      - defer: docker-compose -f docker/compose.test.yml down
      - sleep 10
      - go test -v ./...

  lint:
    desc: Run linter
    cmds:
      - golangci-lint run

  build:
    desc: Build all platforms
    cmds:
      - task: build:linux
      - task: build:darwin
      - task: build:windows

  build:linux:
    desc: Build for Linux
    cmds:
      - GOOS=linux GOARCH=amd64 go build -o bin/goforms-linux-amd64 ./cmd/goforms

  build:darwin:
    desc: Build for macOS
    cmds:
      - GOOS=darwin GOARCH=amd64 go build -o bin/goforms-darwin-amd64 ./cmd/goforms

  build:windows:
    desc: Build for Windows
    cmds:
      - GOOS=windows GOARCH=amd64 go build -o bin/goforms-windows-amd64.exe ./cmd/goforms

  act:
    desc: Run GitHub Actions locally
    cmds:
      - act -P ubuntu-latest=catthehacker/ubuntu:act-latest

  migrate:up:
    desc: Run database migrations up
    cmds:
      - migrate -database "{{.DB_URL}}" -path migrations up

  migrate:down:
    desc: Run database migrations down
    cmds:
      - migrate -database "{{.DB_URL}}" -path migrations down

  migrate:create:
    desc: Create a new migration
    cmds:
      - migrate create -ext sql -dir migrations -seq {{.CLI_ARGS}}

  migrate:force:
    desc: Force set migration version
    cmds:
      - migrate -database "{{.DB_URL}}" -path migrations force {{.CLI_ARGS}}

  migrate:version:
    desc: Show current migration version
    cmds:
      - migrate -database "{{.DB_URL}}" -path migrations version

  clean:
    desc: Clean build artifacts
    cmds:
      - rm -rf bin/ tmp/
      - go clean -cache -testcache

  htmgo:assets:
    desc: Setup HTMGo assets directory
    cmds:
      - mkdir -p public/assets
      - touch public/assets/main.css
      - cp $(go env GOPATH)/pkg/mod/github.com/maddalax/htmgo*/assets/htmgo.js public/assets/
