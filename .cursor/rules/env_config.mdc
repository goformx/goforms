---
description: 
globs: 
alwaysApply: true
---
# Environment Configuration

> **CRITICAL NOTE**: The AI agent CANNOT access, create, or modify `.env` files due to security restrictions. I can only provide guidance on what should be in the file and help debug configuration issues.

The application uses [envconfig](mdc:https:/github.com/kelseyhightower/envconfig) to load environment variables. All configuration is defined in [internal/infrastructure/config/config.go](mdc:internal/infrastructure/config/config.go).

## Configuration vs Constants

### What Belongs in Config (Environment-Configurable)
- Database connection strings and settings
- Server ports, hosts, and timeouts
- Security secrets and keys
- CORS origins and settings
- Rate limiting thresholds
- Logging levels and outputs
- Session timeouts and settings
- Environment-specific settings

### What Belongs in Constants (Fixed Values)
- Application paths and routes
- Static file extensions
- HTTP status codes
- Validation rules and limits
- Default values for forms
- Security constants (nonce sizes, token lengths)
- Business logic constants

**Rule**: If a value can change between environments or deployments, it belongs in config. If it's a fixed application constant, it belongs in `internal/application/constants/`.

## Configuration Structure

### App Configuration
```go
type AppConfig struct {
    Name     string `envconfig:"GOFORMS_APP_NAME" default:"GoFormX"`
    Env      string `envconfig:"GOFORMS_APP_ENV" default:"production"`
    Debug    bool   `envconfig:"GOFORMS_APP_DEBUG" default:"false"`
    LogLevel string `envconfig:"GOFORMS_APP_LOGLEVEL" default:"info"`
    
    // Server Settings
    Scheme         string        `envconfig:"GOFORMS_APP_SCHEME" default:"http"`
    Port           int           `envconfig:"GOFORMS_APP_PORT" default:"8090"`
    Host           string        `envconfig:"GOFORMS_APP_HOST" default:"0.0.0.0"`
    ReadTimeout    time.Duration `envconfig:"GOFORMS_APP_READ_TIMEOUT" default:"5s"`
    WriteTimeout   time.Duration `envconfig:"GOFORMS_APP_WRITE_TIMEOUT" default:"10s"`
    
    // Development Settings
    ViteDevHost string `envconfig:"GOFORMS_VITE_DEV_HOST" default:"localhost"`
    ViteDevPort string `envconfig:"GOFORMS_VITE_DEV_PORT" default:"3000"`
}
```

### Database Configuration
```go
type DatabaseConfig struct {
    Connection      string        `envconfig:"GOFORMS_DB_CONNECTION" default:"mariadb"`
    Host            string        `envconfig:"GOFORMS_DB_HOST" validate:"required"`
    Port            int           `envconfig:"GOFORMS_DB_PORT" default:"3306"`
    Database        string        `envconfig:"GOFORMS_DB_DATABASE" validate:"required"`
    Username        string        `envconfig:"GOFORMS_DB_USERNAME" validate:"required"`
    Password        string        `envconfig:"GOFORMS_DB_PASSWORD" validate:"required"`
    MaxOpenConns    int           `envconfig:"GOFORMS_DB_MAX_OPEN_CONNS" default:"25"`
    MaxIdleConns    int           `envconfig:"GOFORMS_DB_MAX_IDLE_CONNS" default:"5"`
    ConnMaxLifetime time.Duration `envconfig:"GOFORMS_DB_CONN_MAX_LIFETIME" default:"5m"`
}
```

### Security Configuration
```go
type SecurityConfig struct {
    // CSRF protection
    CSRF CSRFConfig `envconfig:"CSRF"`
    
    // CORS configuration
    CORS CORSConfig `envconfig:"CORS"`
    
    // Rate limiting configuration
    RateLimit RateLimitConfig `envconfig:"RATE_LIMIT"`
    
    // Cookie security
    SecureCookie bool `envconfig:"GOFORMS_SECURITY_SECURE_COOKIE" default:"true"`
    
    // Debug mode
    Debug bool `envconfig:"GOFORMS_SECURITY_DEBUG" default:"false"`
}
```

## Key Requirements

1. **Prefix**: All environment variables must be prefixed with `GOFORMS_`
2. **Config only**: All env values will be handled by our config package. Do not use `os.Getenv()` directly.
3. **Location**: `.env` file must be in the root directory
4. **Separation**: Keep constants in `internal/application/constants/`, config in `internal/infrastructure/config/`
5. **Security**:
   - Session secret must be at least 32 characters
   - CSRF secret must be at least 32 characters
   - Use secure cookie settings in production
   - Configure proper session timeout
   - Set secure headers

## Required Environment Variables

```bash
# Database
GOFORMS_DB_HOST=localhost
GOFORMS_DB_PORT=3306
GOFORMS_DB_DATABASE=goforms
GOFORMS_DB_USERNAME=username
GOFORMS_DB_PASSWORD=password

# Security
GOFORMS_SESSION_SECRET=your-32-character-session-secret-here
GOFORMS_SECURITY_CSRF_SECRET=your-32-character-csrf-secret-here
```

## Optional Environment Variables

```bash
# Application
GOFORMS_APP_NAME=GoFormX
GOFORMS_APP_ENV=development
GOFORMS_APP_DEBUG=false
GOFORMS_APP_LOGLEVEL=info

# Server
GOFORMS_APP_SCHEME=http
GOFORMS_APP_PORT=8090
GOFORMS_APP_HOST=0.0.0.0

# Development
GOFORMS_VITE_DEV_HOST=localhost
GOFORMS_VITE_DEV_PORT=3000

# Security
GOFORMS_SECURITY_SECURE_COOKIE=false
```

## Environment-Specific Configuration

### Development Environment
```bash
GOFORMS_APP_ENV=development
GOFORMS_APP_DEBUG=true
GOFORMS_APP_LOGLEVEL=debug
GOFORMS_SECURITY_SECURE_COOKIE=false
```

### Production Environment
```bash
GOFORMS_APP_ENV=production
GOFORMS_APP_DEBUG=false
GOFORMS_APP_LOGLEVEL=info
GOFORMS_SECURITY_SECURE_COOKIE=true
GOFORMS_APP_SCHEME=https
```

## Database Configuration

### PostgreSQL
```bash
GOFORMS_DB_CONNECTION=postgres
GOFORMS_DB_HOST=localhost
GOFORMS_DB_PORT=5432
GOFORMS_DB_DATABASE=goforms
GOFORMS_DB_USERNAME=username
GOFORMS_DB_PASSWORD=password
```

### MariaDB
```bash
GOFORMS_DB_CONNECTION=mariadb
GOFORMS_DB_HOST=localhost
GOFORMS_DB_PORT=3306
GOFORMS_DB_DATABASE=goforms
GOFORMS_DB_USERNAME=username
GOFORMS_DB_PASSWORD=password
```

### SQLite (Development/Testing)
```bash
GOFORMS_DB_CONNECTION=sqlite
GOFORMS_DB_DATABASE=./goforms.db
```

## Security Configuration

### Session Management
```bash
# Generate secure secrets
GOFORMS_SESSION_SECRET=$(openssl rand -hex 32)
GOFORMS_SECURITY_CSRF_SECRET=$(openssl rand -hex 32)

# Cookie settings
GOFORMS_SECURITY_SECURE_COOKIE=true  # Set to true in production
```

## Debugging

When debugging configuration issues:

1. **Trust that the developer has the .env in place**
2. **Check environment variable names**: Ensure they match the config struct tags
3. **Verify required fields**: Check that all required fields are set
4. **Check data types**: Ensure values match expected types (int, bool, duration)
5. **Review logs**: Look for configuration-related error messages

### Common Issues

#### Missing Required Variables
```
Error: required key GOFORMS_DB_HOST missing value
```
**Solution**: Set the required environment variable in your `.env` file.

#### Invalid Data Types
```
Error: invalid value "not-a-number" for GOFORMS_APP_PORT
```
**Solution**: Ensure numeric fields contain valid numbers.

#### Invalid Duration Format
```
Error: invalid duration "5" for GOFORMS_APP_READ_TIMEOUT
```
**Solution**: Use proper duration format (e.g., "5s", "1m", "1h").

## Best Practices

1. **Never commit `.env` files**: Add `.env` to `.gitignore`
2. **Use strong secrets**: Generate cryptographically secure secrets
3. **Environment-specific configs**: Use different configs for dev/staging/prod
4. **Validate configuration**: Test configuration loading in each environment
5. **Document defaults**: Keep configuration documentation up to date
6. **Use secrets management**: In production, use proper secrets management
7. **Keep constants separate**: Don't put fixed values in config