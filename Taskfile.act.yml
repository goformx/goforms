version: '3'
output: 'prefixed'

vars:
  GO_VERSION: "1.24"
  NODE_VERSION: "18"
  ACT_PATH: "/home/linuxbrew/.linuxbrew/bin/act"

tasks:
  setup:
    desc: Setup environment (mirrors GitHub Actions setup job)
    cmds:
      - go mod download
      - go mod verify
      - npm install
      - npm run typecheck

  verify:
    desc: Verify code (mirrors GitHub Actions verify job)
    deps: [setup]
    cmds:
      - go install github.com/a-h/templ/cmd/templ@latest
      - templ generate
      - go install go.uber.org/mock/mockgen@latest
      - mockgen -typed -source=internal/infrastructure/logging/types.go -destination=test/mocks/logging/mock_logger.go -package=logging
      - mockgen -typed -source=internal/domain/form/repository.go -destination=test/mocks/form/mock_repository.go -package=form
      - mockgen -typed -source=internal/domain/form/event/event.go -destination=test/mocks/form/mock_publisher.go -package=form
      - mockgen -typed -source=internal/domain/common/events/event.go -destination=test/mocks/events/mock_eventbus.go -package=events
      - golangci-lint run ./...
      - go test -v ./internal/...

  build:
    desc: Build project (mirrors GitHub Actions build job)
    deps: [verify]
    cmds:
      - mkdir -p bin
      - go build -ldflags "{{.LDFLAGS}}" -o bin/server ./cmd/goforms
      - ls -la bin/

  all:
    desc: Run all act tasks in sequence
    deps: [setup, verify, build]

  act:setup:
    desc: Run act setup job
    cmds:
      - {{.ACT_PATH}} -j setup

  act:verify:
    desc: Run act verify job
    cmds:
      - {{.ACT_PATH}} -j verify

  act:build:
    desc: Run act build job
    cmds:
      - {{.ACT_PATH}} -j build

  act:all:
    desc: Run all act jobs
    cmds:
      - {{.ACT_PATH}} -j setup
      - {{.ACT_PATH}} -j verify
      - {{.ACT_PATH}} -j build 
